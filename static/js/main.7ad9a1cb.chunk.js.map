{"version":3,"sources":["components/HeaderTitle.jsx","components/TodoListFilterGroup.jsx","components/TodoAddGroup.jsx","components/TodoListItem.jsx","hooks/useTodoList.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderTitle","className","TodoListFilterGroup","setTodoState","todoState","getBtnState","e","target","id","onClick","TodoAddGroup","onAddTodo","defaultTodo","Math","random","name","done","useState","todo","setTodo","type","placeholder","value","onChange","alert","TodoListItem","onDelete","ckeckState","getId","onChangeValue","checked","useTodoList","todos","setTodos","handleAddTodo","handleChangeTodoValue","getClickId","onTodoIndex","findIndex","Number","newTodos","App","length","map","index","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ad9a1cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const HeaderTitle = () =>{\r\n    return(\r\n        <div className=\"titleGroup\" >\r\n            {/* <h1 className=\"title\">TODO{'\\n'}LIST</h1> */}\r\n            <h2 className=\"title\">TODO</h2>\r\n            <h2 className=\"title\">LIST</h2>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\n\r\nexport const TodoListFilterGroup = ({setTodoState, todoState}) =>{\r\n    const getBtnState = (e) =>{\r\n        setTodoState && setTodoState(e.target.id);\r\n    }\r\n    \r\n    return(\r\n        <div className=\"filterBtnGroup\">\r\n            <button className={`${ todoState==='all'? \"filterBtn defaultBtn\":\"filterBtn\"}`} id='all' onClick={getBtnState}>全部</button>\r\n            <button className={`${ todoState==='undo'? \"filterBtn defaultBtn\":\"filterBtn\"}`} id='undo' onClick={getBtnState}>未完成</button>\r\n            <button className={`${ todoState==='done'? \"filterBtn defaultBtn\":\"filterBtn\"}`} id='done' onClick={getBtnState}>已完成</button>\r\n        </div>\r\n    );\r\n};","import React, { useState } from 'react';\r\n\r\nexport const TodoAddGroup = ({onAddTodo, setTodoState})=>{\r\n    const defaultTodo = { id:Math.random(), name:\"\", done:false };\r\n    const [todo, setTodo] = useState(defaultTodo);\r\n\r\n    const submitTodoAdd = ()=>{\r\n        if(todo.name!==\"\"){\r\n            onAddTodo && onAddTodo(todo)\r\n            setTodo(defaultTodo)\r\n            setTodoState('all')\r\n        }else alert(\"請輸入待辦事項\")\r\n    };\r\n\r\n    return(\r\n        <div className=\"addTodoGroup\">\r\n            <input className=\"todotype\" type=\"text\" placeholder=\"新增待辦事項\" value={todo.name} onChange={(e)=>setTodo({...todo, name:e.target.value})}/>\r\n            <button className=\"todoAdd\" onClick={()=>{submitTodoAdd()}}>+</button>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n// import DeleteIcon  from '../public/css/deleteIcon.svg';\r\n\r\nexport const TodoListItem = ({name, onDelete, ckeckState, getId, onChangeValue}) =>{\r\n    \r\n    return(\r\n        <div className=\"todoListItem\">\r\n            <div className=\"itemValue\">\r\n                <input type=\"checkbox\" checked={ckeckState} id={getId} onChange={(e)=>{onChangeValue && onChangeValue(e.target.id);}}/>\r\n                <p>{name}</p>\r\n            </div>\r\n            <button className=\"deleteItemBtn\" onClick={()=>{onDelete()}}>X</button>\r\n        </div>\r\n    );\r\n};\r\n","import { useState } from 'react';\r\n\r\nconst useTodoList = () =>{\r\n    const [todos, setTodos] = useState([]);\r\n    const [todoState, setTodoState] = useState('all');\r\n  \r\n    const handleAddTodo = (todo)=>{\r\n      setTodos([todo, ...todos]);\r\n    }\r\n  \r\n    const handleChangeTodoValue = (getClickId)=>{\r\n      const onTodoIndex = todos.findIndex(\r\n        (todo) => todo.id === Number(getClickId)\r\n      );\r\n      const newTodos = [...todos];\r\n      newTodos[onTodoIndex] = { ...newTodos[onTodoIndex], done: !newTodos[onTodoIndex].done}; \r\n      setTodos(newTodos);\r\n    }\r\n\r\n    return {todos, setTodos, handleAddTodo, todoState, setTodoState, handleChangeTodoValue};\r\n\r\n};\r\n\r\nexport default useTodoList;","// import logo from './logo.svg';\nimport './public/css/todoPage.css';\nimport './public/css/main.css';\nimport React from 'react';\nimport { HeaderTitle } from \"./components/HeaderTitle\";\nimport { TodoListFilterGroup } from \"./components/TodoListFilterGroup\";\nimport { TodoAddGroup } from './components/TodoAddGroup';\nimport { TodoListItem } from './components/TodoListItem';\nimport useTodoList from \"./hooks/useTodoList\";\n\nfunction App() {\n  const {todos, setTodos, handleAddTodo, todoState, setTodoState, handleChangeTodoValue} = useTodoList();\n\n  return (\n    <div className=\"container\">\n      <div  className=\"header\">\n        <HeaderTitle />\n        <TodoListFilterGroup setTodoState={setTodoState} todoState={todoState}/>\n      </div>\n      <div className=\"todoItemGroup\">\n        <TodoAddGroup onAddTodo={handleAddTodo} setTodoState={setTodoState}/>\n        <div className=\"todoListItemGroup\">\n        { todos.length === 0 && (\n          <div>\n            <h3>無待辦事項</h3>\n          </div>\n          )}\n        { todoState==='all' && todos.map((todo, index)=>(\n        <TodoListItem\n          key = {index} \n          name = {todo.name}\n          getId = {todo.id}\n          ckeckState = {todo.done}\n          onChangeValue = {handleChangeTodoValue}\n          onDelete = {()=>{setTodos([...todos.slice(0, index), ...todos.slice(index+1)])}}\n        />\n        ))}\n        { todoState==='undo' && todos.map((todo, index)=>(\n            todo.done===false && <TodoListItem\n            key = {index} \n            name = {todo.name}\n            getId = {todo.id}\n            ckeckState = {todo.done}\n            onChangeValue = {handleChangeTodoValue}\n            onDelete = {()=>{setTodos([...todos.slice(0, index), ...todos.slice(index+1)])}}\n          />\n        ))}\n        { todoState==='done' && todos.map((todo, index)=>(\n          todo.done===true && <TodoListItem\n            key = {index} \n            name = {todo.name}\n            getId = {todo.id}\n            ckeckState = {todo.done}\n            onChangeValue = {handleChangeTodoValue}\n            onDelete = {()=>{setTodos([...todos.slice(0, index), ...todos.slice(index+1)])}}\n          />\n        ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}